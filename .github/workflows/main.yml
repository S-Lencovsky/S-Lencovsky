- uses: Platane/snk@v3
  with:
    # github user name to read the contribution graph from (**required**)
    # using action context var `github.repository_owner` or specified user
    github_user_name: ${{ github.repository_owner }}

    # list of files to generate.
    # one file per line. Each output can be customized with options as query string.
    #
    #  supported options:
    #  - palette:     A preset of color, one of [github, github-dark, github-light]
    #  - color_snake: Color of the snake
    #  - color_dots:  Coma separated list of dots color.
    #                 The first one is 0 contribution, then it goes from the low contribution to the highest.
    #                 Exactly 5 colors are expected.
    outputs: |
      dist/github-snake.svg
      dist/github-snake-dark.svg?palette=github-dark
      dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9name: Generate Snake

on:
  # Triggers the workflow on push or pull request events to the repository.
  push:
    branches:
      - main
  # Also run every 12 hours
  schedule:
    - cron: "0 */12 * * *"
  # Allows us to run the Action manually from the Actions tab.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checks out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Generates the snake game from a GitHub user's contribution graph
      - name: Generate Snake Contribution Graph
        uses: Platane/snk@v2
        with:
          github_user_name: S-Lencovsky  # Replace with your GitHub username

      # 3. Push the generated content to the `output` branch
      # The `output` branch stores the images that can be used in the README
      - name: Push to output branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
